daemon off;
#Heroku dynos have at least 4 cores.
worker_processes <%= ENV["NGINX_WORKERS"] || 4 %>;

events {

	use epoll;
	accept_mutex on;
	worker_connections 1024;
}
http {
	server_tokens off;
	gzip on;
	gzip_comp_level 7;
	gzip_min_length 128;
	gzip_vary on;
	gzip_proxied any;
	gzip_types text/plain text/css application/json application/javascript application/x-javascript text/javascript text/xml application/xml application/rss+xml application/atom+xml application/rdf+xml;
	log_format l2met 'USER_AGENT=$http_user_agent X-Forwarded-For=$http_x_forwarded_for';
	access_log logs/nginx/access.log l2met;
	error_log logs/nginx/error.log;
	include mime.types;
	default_type application/octet-stream;
	sendfile on;

	#Must read the body in 5 seconds.
	client_body_timeout 5;

	upstream app_server {

		server unix:/tmp/nginx.socket fail_timeout=0;
	}

	server {

		root app;
		listen <%= ENV["PORT"] %> default_server;
		server_name _;
		keepalive_timeout 5;
		add_header	X-Frame-Options "SAMEORIGIN";
		pagespeed 	on;
		pagespeed 	FileCachePath "/tmp/pagespeed/";
		pagespeed 	XHeaderValue "pagespeed";
		pagespeed 	PreserveUrlRelativity on;
		pagespeed 	LowercaseHtmlNames on;
		pagespeed 	ModifyCachingHeaders off;
		pagespeed 	Statistics off;
		pagespeed 	AvoidRenamingIntrospectiveJavascript off;
		pagespeed 	MaxCacheableContentLength -1;
	
	# pagespeed javascript experiment
		pagespeed 	UseExperimentalJsMinifier on;
	
	# pagespeed default filters
		pagespeed	RewriteLevel CoreFilters;
	
	# pagespeed filters
		pagespeed 	EnableFilters collapse_whitespace;			# html
		pagespeed	EnableFilters remove_comments;				# html
		pagespeed 	EnableFilters remove_quotes;				# html
		pagespeed	EnableFilters rewrite_images;				# images
		pagespeed	EnableFilters convert_png_to_jpeg;			# images
		pagespeed	EnableFilters convert_jpeg_to_webp;			# images
		pagespeed 	EnableFilters lazyload_images;				# images
		pagespeed	EnableFilters defer_javascript;				# javascript
		pagespeed	EnableFilters rewrite_javascript;			# javascript
		pagespeed 	EnableFilters inline_css;					# css
		#pagespeed	EnableFilters combine_css;					# css
		pagespeed	EnableFilters prioritize_critical_css;		# css
		pagespeed	EnableFilters rewrite_css;					# css
		#pagespeed 	EnableFilters fallback_rewrite_css_urls;	# css fallback
		pagespeed	EnableFilters inline_google_font_css;		# google fonts
		pagespeed 	EnableFilters insert_dns_prefetch;			# dns
		pagespeed 	EnableFilters extend_cache;					# caching

		# Ensure requests for pagespeed optimized resources go to the pagespeed handler
		# and no extraneous headers get set.
		location ~ \.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+ {
			add_header "" "";
		}
		
		# pagespeed handlers
		location ~ "^/pagespeed_static/" { 

		}
		location ~ "^/ngx_pagespeed_beacon$" { 
			
		}
		location / {
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $http_host;
			proxy_redirect off;
			proxy_pass http://app_server;
		}		
		location /static/ {
			alias /app/static/;
			try_files $uri =404;
		}	
	}
}

	